{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33m🔄 Retrying connection (1/5) in 5s...\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m📊 Creating database indexes...\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m🚀 Server running on port 5000\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m📍 API available at http://localhost:5000/api\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m💻 Environment: development\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m📊 Health check: http://localhost:5000/health\u001b[39m","timestamp":"2025-09-16 17:50:26:5026"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:31:5031"}
{"level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33m🔄 Retrying connection (2/5) in 5s...\u001b[39m","timestamp":"2025-09-16 17:50:31:5031"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Failed to create indexes: Operation `users.createIndex()` buffering timed out after 10000ms\u001b[39m","timestamp":"2025-09-16 17:50:36:5036"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m✅ Database initialization completed\u001b[39m","timestamp":"2025-09-16 17:50:36:5036"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:36:5036"}
{"level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33m🔄 Retrying connection (3/5) in 5s...\u001b[39m","timestamp":"2025-09-16 17:50:36:5036"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:41:5041"}
{"level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33m🔄 Retrying connection (4/5) in 5s...\u001b[39m","timestamp":"2025-09-16 17:50:41:5041"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:46:5046"}
{"level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33m🔄 Retrying connection (5/5) in 5s...\u001b[39m","timestamp":"2025-09-16 17:50:46:5046"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m❌ Database connection failed: The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string.\u001b[39m","timestamp":"2025-09-16 17:50:51:5051"}
